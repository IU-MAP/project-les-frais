// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormInput when it has label matches the snapshot 1`] = `
VueWrapper {
  "__app": Object {
    "_component": Object {
      "__emits": null,
      "__props": Array [
        Object {},
        Array [],
      ],
      "name": "VTU_ROOT",
      "render": [Function],
    },
    "_container": <div
      data-v-app=""
    >
      <div
        class="form-input"
      >
        <label
          class="form-input_label"
        >
          
          
          
        </label>
        <div
          class="form-input_wrapper"
        >
          
          
          <input
            autocomplete="off"
            class="form-input_input"
            placeholder=""
            type="text"
          />
          
          
        </div>
        <!--v-if-->
      </div>
    </div>,
    "_context": Object {
      "app": [Circular],
      "components": Object {
        "transition": Object {
          "name": "transition",
          "props": undefined,
          "render": [Function],
        },
        "transition-group": Object {
          "name": "transition-group",
          "props": undefined,
          "render": [Function],
        },
      },
      "config": Object {
        "errorHandler": undefined,
        "globalProperties": Object {},
        "isCustomElement": [Function],
        "isNativeTag": [Function],
        "optionMergeStrategies": Object {},
        "performance": false,
        "warnHandler": undefined,
      },
      "directives": Object {},
      "mixins": Array [
        Object {
          "__emits": null,
          "__props": Array [],
          "beforeCreate": [Function],
        },
      ],
      "provides": Object {},
      "reload": [Function],
    },
    "_props": null,
    "_uid": 1,
    "component": [Function],
    "config": Object {
      "errorHandler": undefined,
      "globalProperties": Object {},
      "isCustomElement": [Function],
      "isNativeTag": [Function],
      "optionMergeStrategies": Object {},
      "performance": false,
      "warnHandler": undefined,
    },
    "directive": [Function],
    "mixin": [Function],
    "mount": [Function],
    "provide": [Function],
    "unmount": [Function],
    "use": [Function],
    "version": "3.0.11",
  },
  "__setProps": [Function],
  "componentVM": Object {
    "autocomplete": "off",
    "disabled": false,
    "error": "",
    "hasOwnProperty": [Function],
    "id": null,
    "input": [Function],
    "inputAttrs": Object {},
    "inputDelay": 0,
    "labelText": "",
    "mask": "",
    "noLabel": false,
    "placeholder": "",
    "required": false,
    "type": "text",
    "val": null,
    "value": null,
  },
  "rootVM": Object {},
  "wrapperElement": <div
    class="form-input"
  >
    <label
      class="form-input_label"
    >
      
      
      
    </label>
    <div
      class="form-input_wrapper"
    >
      
      
      <input
        autocomplete="off"
        class="form-input_input"
        placeholder=""
        type="text"
      />
      
      
    </div>
    <!--v-if-->
  </div>,
}
`;

exports[`FormInput when it has no label matches the snapshot 1`] = `
VueWrapper {
  "__app": Object {
    "_component": Object {
      "__emits": null,
      "__props": Array [
        Object {},
        Array [],
      ],
      "name": "VTU_ROOT",
      "render": [Function],
    },
    "_container": <div
      data-v-app=""
    >
      <div
        class="form-input"
      >
        <label
          class="form-input_label"
        >
          
          
          
        </label>
        <div
          class="form-input_wrapper"
        >
          
          
          <input
            autocomplete="off"
            class="form-input_input"
            placeholder=""
            type="text"
          />
          
          
        </div>
        <!--v-if-->
      </div>
    </div>,
    "_context": Object {
      "app": [Circular],
      "components": Object {
        "transition": Object {
          "name": "transition",
          "props": undefined,
          "render": [Function],
        },
        "transition-group": Object {
          "name": "transition-group",
          "props": undefined,
          "render": [Function],
        },
      },
      "config": Object {
        "errorHandler": undefined,
        "globalProperties": Object {},
        "isCustomElement": [Function],
        "isNativeTag": [Function],
        "optionMergeStrategies": Object {},
        "performance": false,
        "warnHandler": undefined,
      },
      "directives": Object {},
      "mixins": Array [
        Object {
          "__emits": null,
          "__props": Array [],
          "beforeCreate": [Function],
        },
      ],
      "provides": Object {},
      "reload": [Function],
    },
    "_props": null,
    "_uid": 0,
    "component": [Function],
    "config": Object {
      "errorHandler": undefined,
      "globalProperties": Object {},
      "isCustomElement": [Function],
      "isNativeTag": [Function],
      "optionMergeStrategies": Object {},
      "performance": false,
      "warnHandler": undefined,
    },
    "directive": [Function],
    "mixin": [Function],
    "mount": [Function],
    "provide": [Function],
    "unmount": [Function],
    "use": [Function],
    "version": "3.0.11",
  },
  "__setProps": [Function],
  "componentVM": Object {
    "autocomplete": "off",
    "disabled": false,
    "error": "",
    "hasOwnProperty": [Function],
    "id": null,
    "input": [Function],
    "inputAttrs": Object {},
    "inputDelay": 0,
    "labelText": "",
    "mask": "",
    "noLabel": false,
    "placeholder": "",
    "required": false,
    "type": "text",
    "val": null,
    "value": null,
  },
  "rootVM": Object {},
  "wrapperElement": <div
    class="form-input"
  >
    <label
      class="form-input_label"
    >
      
      
      
    </label>
    <div
      class="form-input_wrapper"
    >
      
      
      <input
        autocomplete="off"
        class="form-input_input"
        placeholder=""
        type="text"
      />
      
      
    </div>
    <!--v-if-->
  </div>,
}
`;

exports[`FormInput when it has the basic HTML attributes matches the snapshot 1`] = `
VueWrapper {
  "__app": Object {
    "_component": Object {
      "__emits": null,
      "__props": Array [
        Object {},
        Array [],
      ],
      "name": "VTU_ROOT",
      "render": [Function],
    },
    "_container": <div
      data-v-app=""
    >
      <div
        class="form-input"
      >
        <label
          class="form-input_label"
        >
          
          
          
        </label>
        <div
          class="form-input_wrapper"
        >
          
          
          <input
            autocomplete="off"
            class="form-input_input"
            placeholder=""
            type="text"
          />
          
          
        </div>
        <!--v-if-->
      </div>
    </div>,
    "_context": Object {
      "app": [Circular],
      "components": Object {
        "transition": Object {
          "name": "transition",
          "props": undefined,
          "render": [Function],
        },
        "transition-group": Object {
          "name": "transition-group",
          "props": undefined,
          "render": [Function],
        },
      },
      "config": Object {
        "errorHandler": undefined,
        "globalProperties": Object {},
        "isCustomElement": [Function],
        "isNativeTag": [Function],
        "optionMergeStrategies": Object {},
        "performance": false,
        "warnHandler": undefined,
      },
      "directives": Object {},
      "mixins": Array [
        Object {
          "__emits": null,
          "__props": Array [],
          "beforeCreate": [Function],
        },
      ],
      "provides": Object {},
      "reload": [Function],
    },
    "_props": null,
    "_uid": 2,
    "component": [Function],
    "config": Object {
      "errorHandler": undefined,
      "globalProperties": Object {},
      "isCustomElement": [Function],
      "isNativeTag": [Function],
      "optionMergeStrategies": Object {},
      "performance": false,
      "warnHandler": undefined,
    },
    "directive": [Function],
    "mixin": [Function],
    "mount": [Function],
    "provide": [Function],
    "unmount": [Function],
    "use": [Function],
    "version": "3.0.11",
  },
  "__setProps": [Function],
  "componentVM": Object {
    "autocomplete": "off",
    "disabled": false,
    "error": "",
    "hasOwnProperty": [Function],
    "id": null,
    "input": [Function],
    "inputAttrs": Object {},
    "inputDelay": 0,
    "labelText": "",
    "mask": "",
    "noLabel": false,
    "placeholder": "",
    "required": false,
    "type": "text",
    "val": null,
    "value": null,
  },
  "rootVM": Object {},
  "wrapperElement": <div
    class="form-input"
  >
    <label
      class="form-input_label"
    >
      
      
      
    </label>
    <div
      class="form-input_wrapper"
    >
      
      
      <input
        autocomplete="off"
        class="form-input_input"
        placeholder=""
        type="text"
      />
      
      
    </div>
    <!--v-if-->
  </div>,
}
`;
