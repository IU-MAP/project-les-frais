name: 'CI/CD'

on:
  push:

jobs:
  frontend-lint:
    name: Check code quality
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - name: Install Node
        uses: actions/setup-node@master
        with:
          node-version: '12'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Lint the code
        run: npm run lint

  frontend-unit_testing:
    name: Unit Testing
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - name: Install Node
        uses: actions/setup-node@master
        with:
          node-version: '12'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Lint the code
        run: npm run test:unit

  frontend-e2e_testing:
    name: End-to-End testing
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - name: Install Node
        uses: actions/setup-node@master
        with:
          node-version: '12'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build the app
        run: npm run build

  backend-tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.8 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          python manage.py test

  heroku_push:
    needs: [backend-tests, frontend-e2e_testing, frontend-unit_testing]
    runs-on: ubuntu-latest
    # push only on DEV or master
    if: contains('
      refs/heads/DEV
      refs/heads/master
      ', github.ref)
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "project-les-frais"
          heroku_email: ${{secrets.HEROKU_EMAIL}}
